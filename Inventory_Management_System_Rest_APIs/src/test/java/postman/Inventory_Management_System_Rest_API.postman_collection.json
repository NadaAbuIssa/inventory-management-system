{
	"info": {
		"_postman_id": "354f575d-fff9-435f-adab-5d9691d5bee5",
		"name": "Inventory_Management_System_Rest_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31143981"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is 201 user created\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Nada\",\n  \"email\": \"Nadaaboissa@gmail.com\",\n  \"password\": \"password123\",\n  \"phone\": \"0000000000\",\n  \"role\": \"Administrator\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a list of all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to get users details. \"",
									"        });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the details of a specific user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"You are not authorized to update user details. \"",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"The user with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. \"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Ahmad\",\n  \"email\": \"Ahmad@gmail.com\",\n  \"password\": \"damha123\",\n  \"phone\": \"0590000000\",\n  \"role\": \"Manager\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/users/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply partial updates to a specific user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update user details.\"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The user with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. \"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"phone\": \"9876543210\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to delete user. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The user with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. \"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve the details of a specific user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to get user details.\"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The user with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/users/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "Create a new address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"street\": \"123 Main St\",\n  \"city\": \"Ramallah\",\n  \"state\": \"West Bank\",\n  \"country\": \"Palestine\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/addresses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve all addresses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/addresses",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a specific address by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update address details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The address with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"street\": \"456 ABC\",\n  \"city\": \"Nablus\",\n  \"state\": \"West Bank\",\n  \"country\": \"Palestine\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/addresses/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"addresses",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update a specific address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update address details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The address with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"city\": \"Bethlehem\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/addresses/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"addresses",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The address with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/addresses/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"addresses",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a specific address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The address with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/addresses/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"addresses",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Item",
			"item": [
				{
					"name": "Create a new item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Table\",\n  \"description\": \"Wooden table\",\n  \"quantity\": 1,\n  \"price\": 299.99,\n  \"barcode\": 123456789\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve  all items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an item by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update item details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The item with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Table\",\n  \"description\": \"Updated dining table\",\n  \"quantity\": 2,\n  \"price\": 399.99,\n  \"barcode\": 123456789\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/items/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update an item by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update item details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The item with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 349.99\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/items/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an item by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to delete item . \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The item with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/items/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a specific item by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to get item details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The item with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/items/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"items",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Create a new transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized . \"",
									"        });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_involved_id\": 1,\n  \"item_affected_id\": 2,\n  \"quantity\": 5,\n  \"date\": \"2024-04-05T10:30:00Z\",\n  \"address_id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve all transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to get transactions details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/transactions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a specific transaction by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"",
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update transaction details.\"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The transaction with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_involved_id\": 1,\n  \"item_affected_id\": 2,\n  \"quantity\": 8,\n  \"date\": \"2024-04-05T14:15:00Z\",\n  \"address_id\": 3\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/transactions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially update a specific transaction by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 400 - Bad Request\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"The request contains invalid parameters. Please check the request and try again.\"",
									"    });",
									"});",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to update transaction details. \"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The transaction with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"quantity\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/transactions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a specific transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to delete transaction .\"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The transaction with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/transactions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve a specific transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"pm.test(\"Response code is 200 - OK\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response code is 403 - Forbidden\", function () {",
									"    pm.response.to.have.status(403);",
									"    pm.response.to.have.jsonBody({",
									"       \"error\": \"You are not authorized to get transaction details.\"",
									"        });",
									"});",
									"",
									"",
									"pm.test(\"Response code is 404 - Not Found\", function () {",
									"    pm.response.to.have.status(404);",
									"    pm.response.to.have.jsonBody({",
									"\"error\":\"The transaction with the specified ID was not found. Please verify the ID and try again.\"",
									"    });",
									"});",
									"",
									"pm.test(\"Response code is 500 - Internal Server Error\", function () {",
									"    pm.response.to.have.status(500);",
									"    pm.response.to.have.jsonBody({",
									"        \"error\": \"An internal server error occurred. Please try again later .\"",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/transactions/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"transactions",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}